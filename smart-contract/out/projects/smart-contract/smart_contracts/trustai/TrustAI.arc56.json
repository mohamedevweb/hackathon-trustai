{
    "name": "TrustAI",
    "structs": {},
    "methods": [
        {
            "name": "fund_contract",
            "args": [
                {
                    "type": "address",
                    "name": "client"
                },
                {
                    "type": "address",
                    "name": "freelancer"
                },
                {
                    "type": "uint64",
                    "name": "amount"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "validate_with_ai",
            "args": [
                {
                    "type": "bool",
                    "name": "ai_result"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "release_payment",
            "args": [],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 2,
                "bytes": 2
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "client": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "Y2xpZW50"
                },
                "freelancer": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "ZnJlZWxhbmNlcg=="
                },
                "amount": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "YW1vdW50"
                },
                "validated": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "dmFsaWRhdGVk"
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        78,
                        102,
                        131
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        170
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        81,
                        105,
                        134
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        273,
                        308,
                        312
                    ],
                    "errorMessage": "check GlobalState exists"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiACAAEmBAQVH3x1CXZhbGlkYXRlZApmcmVlbGFuY2VyBmFtb3VudDEbQQB1ggMEoToyVAR74JRABBE6iOQ2GgCOAwA3ABoAAiJDMRkURDEYRIgAuUkVFlcGAkxQKExQsCNDMRkURDEYRDYaASJTiABrSRUWVwYCTFAoTFCwI0MxGRREMRhENhoBNhoCNhoDF4gAGUkVFlcGAkxQKExQsCNDMRlA/6IxGBREI0OKAwGABmNsaWVudIv9ZyqL/mcri/9nKSJngBRDb250cmFjdCBmdW5kZWQg8J+SsImKAQEpi/9ni/9BABOAEEFJIHZhbGlkYXRlZCDinIWJgA9BSSByZWplY3RlZCDinYyJIillREAAG4AYQUkgbm90IHZhbGlkYXRlZCB5ZXQg4p2MibEiKmVEIitlRLIIsgcjshAisgGzgBVQYXltZW50IHJlbGVhc2VkIPCfkriJ",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 7,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}